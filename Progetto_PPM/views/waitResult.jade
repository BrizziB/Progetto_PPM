extends layout

block head
	script(type='text/javascript' src='/scripts/Chart.js')
	script(type='text/javascript' src='/socket.io/socket.io.js')
	script(type='text/javascript' src='/scripts/custom/redirect.js')
	
	
block content
			div(id="text1", class = 'centered')
			div(id="text2", class = 'centered') Attendi inizio della nuova improvvisazione
			div(id="score", class = 'centered')
			canvas#lastChart()
			script.
				Chart.defaults.global.showTooltips = false;
				var num;
				var lastChart;
				var socket=io(":3000/matchResult");				
				var ctx=document.getElementById("lastChart").getContext("2d");	
				socket.on('welcomeResult', function(numBlue, numRed, punteggiBlue, punteggiRed, matchNum){	
					var winParag = document.createElement('p');
					if(numBlue>numRed){
						var txt1=document.createTextNode("Vince l'improvvisazione la squadra BLU");
					}
					if(numBlue<numRed){
						var txt1=document.createTextNode("Vince l'improvvisazione la squadra ROSSA");
					}
					if(numBlue==numRed){
						var txt1=document.createTextNode("L'improvvisazione finisce in PAREGGIO");
					}
					winParag.appendChild(txt1);
					document.getElementById("text1").appendChild(winParag);

					
					var scoreParag = document.createElement('p');
					var blueParag = document.createElement('p');
					var redParag = document.createElement('p');
									
					scoreParag.appendChild(document.createTextNode("Risultati del Match corrente: "));
					redParag.appendChild(document.createTextNode("voti dei Rossi: "+numRed));
					blueParag.appendChild(document.createTextNode("voti dei Blu: "+numBlue));
					
					document.getElementById("score").appendChild(scoreParag);
					document.getElementById("score").appendChild(redParag);
					document.getElementById("score").appendChild(blueParag);
					
					if(matchNum>=4){
						var data= {
						labels : ["match "+ (matchNum),"match "+ (matchNum-1),"match "+ (matchNum-2), "match "+(matchNum-3)],
						datasets : [
						{
							fillColor : "rgba(255,0,0,0.9)",
							strokeColor : "rgba(255,0,0,0.4)",
							data :[punteggiRed[matchNum-1], punteggiRed[matchNum-2], punteggiRed[matchNum-3], punteggiRed[matchNum-4]]
						},
						{
							fillColor : "rgba(0,0,255,0.9)",
							strokeColor : "rgba(0,0,255,0.4)",
							data :[punteggiBlue[matchNum-1], punteggiBlue[matchNum-2], punteggiBlue[matchNum-3], punteggiBlue[matchNum-4]]
							}
							]
						}
					}
					
					if(matchNum==3){
						var data= {
						labels : ["match "+ (matchNum),"match "+ (matchNum-1),"match "+ (matchNum-2)],
						datasets : [
						{
							fillColor : "rgba(255,0,0,0.9)",
							strokeColor : "rgba(255,0,0,0.4)",
							data :[punteggiRed[matchNum-1], punteggiRed[matchNum-2], punteggiRed[matchNum-3]]
						},
						{
							fillColor : "rgba(0,0,255,0.9)",
							strokeColor : "rgba(0,0,255,0.4)",
							data :[punteggiBlue[matchNum-1], punteggiBlue[matchNum-2], punteggiBlue[matchNum-3]]
							}
							]
						}
					}
					if(matchNum==2){
						var data= {
						labels : ["match "+ (matchNum),"match "+ (matchNum-1)],
						datasets : [
						{
							fillColor : "rgba(255,0,0,0.9)",
							strokeColor : "rgba(255,0,0,0.4)",
							data :[punteggiRed[matchNum-1], punteggiRed[matchNum-2]]
						},
						{
							fillColor : "rgba(0,0,255,0.9)",
							strokeColor : "rgba(0,0,255,0.4)",
							data :[punteggiBlue[matchNum-1], punteggiBlue[matchNum-2]]
							}
							]
						}
					}
					if(matchNum==1){
						var data= {
						labels : ["match "+ (matchNum)],
						datasets : [
						{
							fillColor : "rgba(255,0,0,0.9)",
							strokeColor : "rgba(255,0,0,0.4)",
							data :[punteggiRed[matchNum-1]]
						},
						{
							fillColor : "rgba(0,0,255,0.9)",
							strokeColor : "rgba(0,0,255,0.4)",
							data :[punteggiBlue[matchNum-1]]
							}
							]
						}
					}
				
				lastChart=new Chart(ctx).Bar(data, {responsive:true}, {showTooltips:false});
				});

	